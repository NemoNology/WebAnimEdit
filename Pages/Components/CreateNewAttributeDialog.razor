@namespace WebAnimEdit.Pages.Components
@using Attribute = WebAnimEdit.Models.Implementations.Attribute;
@using WebAnimEdit.Models.Enums

<MudDialog>
    <DialogContent>
        <MudTextField Label="Имя атрибута" @bind-Value="@(_name)" Variant="@Variant.Text" Required />
        <MudTextField Label="Тег атрибута" @bind-Value="@(_tag)" Variant="@Variant.Text" />
        <MudTextField Label="Тег родительского атрибута" @bind-Value="@(_parentTag)" Variant="@Variant.Text" />
        <MudTextField Label="Значение атрибута" @bind-Value="@(_value)" Variant="@Variant.Text" />
        <MudSelect Label="Тип значения атрибута" @bind-Value="@(_valueType)" Variant="@Variant.Text">
            @foreach (AttributeValueType item in Enum.GetValues(typeof(AttributeValueType)))
            {
                <MudSelectItem Value="@item">@item</MudSelectItem>
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@(e => MudDialog.Cancel())">Отмена</MudButton>
        <MudButton Color="Color.Primary" OnClick="@(e => 
                MudDialog.Close(new Attribute(
                    _name, _tag, _value, _valueType, string.IsNullOrWhiteSpace(_parentTag) ? null : _parentTag))
            )">Добавить</MudButton>
    </DialogActions>
</MudDialog>

@code
{
    string _name = "";
    string _tag = "";
    string _parentTag = "";
    string _value = "";
    AttributeValueType _valueType = AttributeValueType.Value;

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = null!;
}